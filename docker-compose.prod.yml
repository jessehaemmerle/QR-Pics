version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: qr-photo-mongodb-prod
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=qr_photo_db
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=strongpassword123
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - qr-photo-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/qr_photo_db --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: qr-photo-backend-prod
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://admin:strongpassword123@mongodb:27017
      - DB_NAME=qr_photo_db
      - SECRET_KEY=your-production-secret-key-change-this-abc123def456
      - FRONTEND_URL=https://yourdomain.com
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - qr-photo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: qr-photo-frontend-prod
    restart: unless-stopped
    environment:
      - REACT_APP_BACKEND_URL=https://yourdomain.com
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - qr-photo-network

  nginx:
    image: nginx:alpine
    container_name: qr-photo-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - qr-photo-network

volumes:
  mongodb_data:
    driver: local

networks:
  qr-photo-network:
    driver: bridge